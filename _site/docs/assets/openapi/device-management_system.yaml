swagger: '2.0'
info:
  version: v1.0
  title: DOCG API
  description: Swagger DOCG API descriptions
host: 127.0.0.1
basePath: /
schemes:
  - https
tags: []
paths:
  /v1/docg/campaignCreation:
    post:
      summary: Campaign Creation
      description: Prepare a new campaign on multiple vin. The cmapign can be OTA only, DM only or both.
      tags:
        - Campaign
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: authorization
          in: header
          required: true
          type: string
          description: Authorization header.This is an OAuth 2.0 token.
        - name: x-api-key
          in: header
          required: true
          type: string
          description: Client API key
        - name: clientrequestid
          in: header
          required: true
          type: string
          description: To be generated by Client. Unique identifier for every request sent by the client
        - name: locale
          in: header
          required: true
          type: string
          description: ''
        - name: content-type
          in: header
          required: true
          type: string
          description: ''
        - in: body
          name: CampaignData
          required: true
          schema:
            $ref: '#/definitions/CampaignDataBody'
      responses:
        '200':
          description: HTTP 200 OK
          schema:
            $ref: '#/definitions/campaignCreationSuccess'
        '400':
          description: HTTP 400 Bad Request
          schema:
            $ref: '#/definitions/400ErrorResponse'
        '401':
          description: 'HTTP 401 Unauthorized '
          schema:
            $ref: '#/definitions/401ErrorResponse'
        '403':
          description: HTTP 403 Forbidden
          schema:
            $ref: '#/definitions/403ErrorResponse'
        '404':
          description: HTTP 404 Not Found
          schema:
            $ref: '#/definitions/404ErrorResponse'
        '408':
          description: HTTP 408 Request Timeout
          schema:
            $ref: '#/definitions/ErrorModel'
        '422':
          description: HTTP 422 Unprocessable Entity
          schema:
            $ref: '#/definitions/422ErrorResponse'
        '500':
          description: HTTP 500 Internal Server Error
          schema:
            $ref: '#/definitions/500ErrorResponse'
        '503':
          description: HTTP 503 Service Unavailable
          schema:
            $ref: '#/definitions/503ErrorResponse'
        '504':
          description: HTTP 504 Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorModel'
  /v1/docg/campaignStart:
    post:
      summary: Campaign Start
      description: start a prepared campaign given ID and population of VIN to stat
      tags:
        - Campaign
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: authorization
          in: header
          required: true
          type: string
          description: Authorization header.This is an OAuth 2.0 token.
        - name: x-api-key
          in: header
          required: true
          type: string
          description: Client API key
        - name: clientrequestid
          in: header
          required: true
          type: string
          description: To be generated by Client. Unique identifier for every request sent by the client
        - name: locale
          in: header
          required: true
          type: string
          description: ''
        - name: content-type
          in: header
          required: true
          type: string
          description: ''
        - in: body
          name: CampaignData
          required: true
          schema:
            $ref: '#/definitions/CampaignStartDataBody'
      responses:
        '200':
          description: HTTP 200 OK
          schema:
            $ref: '#/definitions/Success'
        '400':
          description: HTTP 400 Bad Request
          schema:
            $ref: '#/definitions/400ErrorResponse'
        '401':
          description: 'HTTP 401 Unauthorized '
          schema:
            $ref: '#/definitions/401ErrorResponse'
        '403':
          description: HTTP 403 Forbidden
          schema:
            $ref: '#/definitions/403ErrorResponse'
        '404':
          description: HTTP 404 Not Found
          schema:
            $ref: '#/definitions/404ErrorResponse'
        '408':
          description: HTTP 408 Request Timeout
          schema:
            $ref: '#/definitions/ErrorModel'
        '422':
          description: HTTP 422 Unprocessable Entity
          schema:
            $ref: '#/definitions/422ErrorResponse'
        '500':
          description: HTTP 500 Internal Server Error
          schema:
            $ref: '#/definitions/500ErrorResponse'
        '503':
          description: HTTP 503 Service Unavailable
          schema:
            $ref: '#/definitions/503ErrorResponse'
        '504':
          description: HTTP 504 Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorModel'
  /v1/docg/campaignProcessFeedback:
    post:
      summary: Campaign Process Feedback
      description: provide to the caller registered for the campaign operation (according the authorizatioon header) the progress about campaign opration
      tags:
        - Feedback
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: authorization
          in: header
          required: true
          type: string
          description: Authorization header.This is an OAuth 2.0 token.
        - name: x-api-key
          in: header
          required: true
          type: string
          description: Client API key
        - name: clientrequestid
          in: header
          required: true
          type: string
          description: To be generated by Client. Unique identifier for every request sent by the client
        - name: locale
          in: header
          required: true
          type: string
          description: ''
        - name: content-type
          in: header
          required: true
          type: string
          description: ''
        - in: body
          name: CampaignData
          required: true
          schema:
            $ref: '#/definitions/campaignOperationFeedBack'
      responses:
        '200':
          description: HTTP 200 OK
          schema:
            $ref: '#/definitions/Success'
        '400':
          description: HTTP 400 Bad Request
          schema:
            $ref: '#/definitions/400ErrorResponse'
        '401':
          description: 'HTTP 401 Unauthorized '
          schema:
            $ref: '#/definitions/401ErrorResponse'
        '403':
          description: HTTP 403 Forbidden
          schema:
            $ref: '#/definitions/403ErrorResponse'
        '404':
          description: HTTP 404 Not Found
          schema:
            $ref: '#/definitions/404ErrorResponse'
        '408':
          description: HTTP 408 Request Timeout
          schema:
            $ref: '#/definitions/ErrorModel'
        '422':
          description: HTTP 422 Unprocessable Entity
          schema:
            $ref: '#/definitions/422ErrorResponse'
        '500':
          description: HTTP 500 Internal Server Error
          schema:
            $ref: '#/definitions/500ErrorResponse'
        '503':
          description: HTTP 503 Service Unavailable
          schema:
            $ref: '#/definitions/503ErrorResponse'
        '504':
          description: HTTP 504 Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorModel'
  /v1/docg/vehicleRegistrationProcessFeedback:
    post:
      summary: Vehicle Registration Process Feedback
      description: provide to the caller registered for the vehicle registartion operation (according the authorizatioon header) the progress about vehicle registration opration
      tags:
        - Feedback
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: authorization
          in: header
          required: true
          type: string
          description: Authorization header.This is an OAuth 2.0 token.
        - name: x-api-key
          in: header
          required: true
          type: string
          description: Client API key
        - name: clientrequestid
          in: header
          required: true
          type: string
          description: To be generated by Client. Unique identifier for every request sent by the client
        - name: locale
          in: header
          required: true
          type: string
          description: ''
        - name: content-type
          in: header
          required: true
          type: string
          description: ''
        - in: body
          name: vehicleRegistrationData
          required: true
          schema:
            $ref: '#/definitions/vehicleRegistrationOperationFeedBack'
      responses:
        '200':
          description: HTTP 200 OK
          schema:
            $ref: '#/definitions/Success'
        '400':
          description: HTTP 400 Bad Request
          schema:
            $ref: '#/definitions/400ErrorResponse'
        '401':
          description: 'HTTP 401 Unauthorized '
          schema:
            $ref: '#/definitions/401ErrorResponse'
        '403':
          description: HTTP 403 Forbidden
          schema:
            $ref: '#/definitions/403ErrorResponse'
        '404':
          description: HTTP 404 Not Found
          schema:
            $ref: '#/definitions/404ErrorResponse'
        '408':
          description: HTTP 408 Request Timeout
          schema:
            $ref: '#/definitions/ErrorModel'
        '422':
          description: HTTP 422 Unprocessable Entity
          schema:
            $ref: '#/definitions/422ErrorResponse'
        '500':
          description: HTTP 500 Internal Server Error
          schema:
            $ref: '#/definitions/500ErrorResponse'
        '503':
          description: HTTP 503 Service Unavailable
          schema:
            $ref: '#/definitions/503ErrorResponse'
        '504':
          description: HTTP 504 Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorModel'
  /v1/docg/swRegistrationProcessFeedback:
    post:
      summary: software Registration Process Feedback
      description: provide to the caller registered for the software registartion operation (according the authorizatioon header) the progress about software registration opration
      tags:
        - Feedback
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: authorization
          in: header
          required: true
          type: string
          description: Authorization header.This is an OAuth 2.0 token.
        - name: x-api-key
          in: header
          required: true
          type: string
          description: Client API key
        - name: clientrequestid
          in: header
          required: true
          type: string
          description: To be generated by Client. Unique identifier for every request sent by the client
        - name: locale
          in: header
          required: true
          type: string
          description: ''
        - name: content-type
          in: header
          required: true
          type: string
          description: ''
        - in: body
          name: swRegistrationData
          required: true
          schema:
            $ref: '#/definitions/swRegistrationOperationFeedBack'
      responses:
        '200':
          description: HTTP 200 OK
          schema:
            $ref: '#/definitions/Success'
        '400':
          description: HTTP 400 Bad Request
          schema:
            $ref: '#/definitions/400ErrorResponse'
        '401':
          description: 'HTTP 401 Unauthorized '
          schema:
            $ref: '#/definitions/401ErrorResponse'
        '403':
          description: HTTP 403 Forbidden
          schema:
            $ref: '#/definitions/403ErrorResponse'
        '404':
          description: HTTP 404 Not Found
          schema:
            $ref: '#/definitions/404ErrorResponse'
        '408':
          description: HTTP 408 Request Timeout
          schema:
            $ref: '#/definitions/ErrorModel'
        '422':
          description: HTTP 422 Unprocessable Entity
          schema:
            $ref: '#/definitions/422ErrorResponse'
        '500':
          description: HTTP 500 Internal Server Error
          schema:
            $ref: '#/definitions/500ErrorResponse'
        '503':
          description: HTTP 503 Service Unavailable
          schema:
            $ref: '#/definitions/503ErrorResponse'
        '504':
          description: HTTP 504 Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorModel'
  /v1/docg/swRegistration:
    post:
      summary: SW Registration
      description: Provide a SW to be used for later campaigns
      tags:
        - Registration
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: authorization
          in: header
          required: true
          type: string
          description: Authorization header.This is an OAuth 2.0 token.
        - name: x-api-key
          in: header
          required: true
          type: string
          description: Client API key
        - name: clientrequestid
          in: header
          required: true
          type: string
          description: To be generated by Client. Unique identifier for every request sent by the client
        - name: locale
          in: header
          required: true
          type: string
          description: ''
        - name: content-type
          in: header
          required: true
          type: string
          description: ''
        - in: body
          name: swRegistrationData
          required: true
          schema:
            $ref: '#/definitions/swRegistrationBody'
      responses:
        '200':
          description: HTTP 200 OK
          schema:
            type: array
            items:
              type: object
              $ref: '#/definitions/swRegistrationSuccess'
        '400':
          description: HTTP 400 Bad Request
          schema:
            $ref: '#/definitions/400ErrorResponse'
        '401':
          description: 'HTTP 401 Unauthorized '
          schema:
            $ref: '#/definitions/401ErrorResponse'
        '403':
          description: HTTP 403 Forbidden
          schema:
            $ref: '#/definitions/403ErrorResponse'
        '404':
          description: HTTP 404 Not Found
          schema:
            $ref: '#/definitions/404ErrorResponse'
        '408':
          description: HTTP 408 Request Timeout
          schema:
            $ref: '#/definitions/ErrorModel'
        '422':
          description: HTTP 422 Unprocessable Entity
          schema:
            $ref: '#/definitions/422ErrorResponse'
        '500':
          description: HTTP 500 Internal Server Error
          schema:
            $ref: '#/definitions/500ErrorResponse'
        '503':
          description: HTTP 503 Service Unavailable
          schema:
            $ref: '#/definitions/503ErrorResponse'
        '504':
          description: HTTP 504 Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorModel'
  /v1/docg/vehicleRegistration:
    post:
      summary: First Vehicle Registration
      description: register for the first time a vehicle
      tags:
        - Registration
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: authorization
          in: header
          required: true
          type: string
          description: Authorization header.This is an OAuth 2.0 token.
        - name: x-api-key
          in: header
          required: true
          type: string
          description: Client API key
        - name: clientrequestid
          in: header
          required: true
          type: string
          description: To be generated by Client. Unique identifier for every request sent by the client
        - name: locale
          in: header
          required: true
          type: string
          description: ''
        - name: content-type
          in: header
          required: true
          type: string
          description: ''
        - in: body
          name: vehicleRegistrationData
          required: true
          schema:
            $ref: '#/definitions/vehicleRegistrationBody'
      responses:
        '200':
          description: HTTP 200 OK
          schema:
            $ref: '#/definitions/vehicleRegistrationSuccess'
        '400':
          description: HTTP 400 Bad Request
          schema:
            $ref: '#/definitions/400ErrorResponse'
        '401':
          description: 'HTTP 401 Unauthorized '
          schema:
            $ref: '#/definitions/401ErrorResponse'
        '403':
          description: HTTP 403 Forbidden
          schema:
            $ref: '#/definitions/403ErrorResponse'
        '404':
          description: HTTP 404 Not Found
          schema:
            $ref: '#/definitions/404ErrorResponse'
        '408':
          description: HTTP 408 Request Timeout
          schema:
            $ref: '#/definitions/ErrorModel'
        '422':
          description: HTTP 422 Unprocessable Entity
          schema:
            $ref: '#/definitions/422ErrorResponse'
        '500':
          description: HTTP 500 Internal Server Error
          schema:
            $ref: '#/definitions/500ErrorResponse'
        '503':
          description: HTTP 503 Service Unavailable
          schema:
            $ref: '#/definitions/503ErrorResponse'
        '504':
          description: HTTP 504 Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorModel'
  /v1/docg/vehicleRegistrationUpdate:
    patch:
      summary: Vehicle Registration Update
      description: update vehicle data
      tags:
        - Registration
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: authorization
          in: header
          required: true
          type: string
          description: Authorization header.This is an OAuth 2.0 token.
        - name: x-api-key
          in: header
          required: true
          type: string
          description: Client API key
        - name: clientrequestid
          in: header
          required: true
          type: string
          description: To be generated by Client. Unique identifier for every request sent by the client
        - name: locale
          in: header
          required: true
          type: string
          description: ''
        - name: content-type
          in: header
          required: true
          type: string
          description: ''
        - in: body
          name: vehicleRegistrationData
          required: true
          schema:
            $ref: '#/definitions/vehicleRegistrationBody'
      responses:
        '200':
          description: HTTP 200 OK
          schema:
            $ref: '#/definitions/vehicleRegistrationSuccess'
        '400':
          description: HTTP 400 Bad Request
          schema:
            $ref: '#/definitions/400ErrorResponse'
        '401':
          description: 'HTTP 401 Unauthorized '
          schema:
            $ref: '#/definitions/401ErrorResponse'
        '403':
          description: HTTP 403 Forbidden
          schema:
            $ref: '#/definitions/403ErrorResponse'
        '404':
          description: HTTP 404 Not Found
          schema:
            $ref: '#/definitions/404ErrorResponse'
        '408':
          description: HTTP 408 Request Timeout
          schema:
            $ref: '#/definitions/ErrorModel'
        '422':
          description: HTTP 422 Unprocessable Entity
          schema:
            $ref: '#/definitions/422ErrorResponse'
        '500':
          description: HTTP 500 Internal Server Error
          schema:
            $ref: '#/definitions/500ErrorResponse'
        '503':
          description: HTTP 503 Service Unavailable
          schema:
            $ref: '#/definitions/503ErrorResponse'
        '504':
          description: HTTP 504 Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorModel'
definitions:
  swRegistrationBody:
    type: object
    required:
      - swPayLoad
    properties:
      swPayLoad:
        description: Provide data describing content to upload.
        $ref: '#/definitions/swPayLoadDef'
  swPayLoadDef:
    type: object
    required:
      - vehicleModelId
      - scomoId
      - targetReference
      - kindOfPackage
      - uri
      - shortDescription
      - longDescription
    properties:
      vehicleModelId:
        description: vehicle model Id to which the scomoId belongs to
        type: string
      domainName:
        description: the domain the scomoid is intended for, if not provided all domains will be considered in scope
        type: string
      scomoId:
        description: Scomo Id
        type: string
      targetReference:
        description: target Reference - this is also called target version. In xP it is the target PSA reference (98...) that that software (this specific scomoId) will have afetr instaling this package.
        type: string
      kindOfPackage:
        description: kind of package
        type: string
        enum:
          - full
          - delta
        example: full
      sourceReferences:
        description: possible source reference - this is also called source version. In xP it is the source PSA reference (98...) that this software (for this specific scomoId) is compatible with (can be applied to). Ignored if kind of package is full
        type: string
      estimatedUpdateTimeInSeconds:
        description: Estimated Update Time In Seconds to apply this package
        type: number
      majesticId:
        description: majestic id for the licence of this package
        type: string
      uri:
        description: uri to use for retrieving the package
        type: string
      shortDescription:
        description: short description of the package
        type: string
      longDescription:
        description: long description of the package
        type: string
  vehicleRegistrationBody:
    type: object
    required:
      - vehicleRegistrationPayLoad
    properties:
      vehicleRegistrationLoad:
        $ref: '#/definitions/vehiclePayLoadDef'
  vehiclePayLoadDef:
    type: object
    required:
      - vin
      - workflowClass
    properties:
      workflowClass:
        description: class of workflow to apply - enum to be provided
        type: string
      vin:
        description: vehicle identifier
        type: string
      vehicleAttributes:
        description: vehicle attributes
        type: object
        $ref: '#/definitions/vehicleAttributes'
      vehicleProperties:
        description: vehicle properties
        type: object
        $ref: '#/definitions/vehicleProperties'
      productionDate:
        type: string
        format: YYYY-MM-DD
      marketData:
        description: market data
        type: object
        $ref: '#/definitions/marketData'
      plantData:
        description: market data
        type: object
        $ref: '#/definitions/plantData'
      ecus:
        type: array
        items:
          type: object
          $ref: '#/definitions/ecuData'
  vehicleAttributes:
    type: object
    properties:
      brandDescription:
        type: string
      brandCode:
        type: string
      modelDescription:
        type: string
      modelCode:
        type: string
      modelYear:
        type: string
  vehicleProperties:
    type: object
    properties:
      vehicleType:
        type: string
      fuelType:
        type: string
  marketData:
    type: object
    properties:
      destinationCountry:
        type: string
      soldRegion:
        type: string
      dealerCode:
        type: string
  plantData:
    type: object
    properties:
      plantName:
        type: string
      plantCode:
        type: string
      company:
        type: string
  ecuData:
    type: object
    properties:
      serialNumber:
        type: string
        description: serial number of device, also konwn as UIN in xP
      maker:
        type: string
      model:
        type: string
        description: model of ECU
        enum:
          - bsrf_v1
          - bsrf_v2
          - ivi_v1
          - ivi_v2
          - tbm
          - tbm20h
          - r1h
          - r1l
          - cadm2
          - sgw20
          - vp2r
          - vp4r
          - g2.5
          - rtcu
          - r2
          - other
      connected:
        type: boolean
      telematicUnit:
        type: boolean
      partNumber:
        type: string
      hwNumber:
        type: string
      swConfiguration:
        type: array
        items:
          type: object
          required:
            - scomoId
            - currentVersion
          properties:
            scomoId:
              type: string
            currentVersion:
              type: string
      dmConfiguration:
        type: array
        items:
          type: object
          required:
            - profile
            - currentValue
          properties:
            profile:
              type: string
              description: string that identifies the set of attributes for a configuration
            currentValue:
              type: string
              description: json that describes the value of each attributes for the belonging profile
      bootstrapConfiguration:
        type: object
        required:
          - profile
          - currentValue
        properties:
          profile:
            type: string
            description: string that identifies the set of attributes for a configuration
          currentValue:
            type: string
            description: json that describes the value of each attributes for the belonging profile
      simData:
        type: object
        properties:
          iccid:
            type: string
          imei:
            type: string
          msisdn:
            type: string
          imsi:
            type: string
          eid:
            type: string
  operationId:
    type: string
    description: id of the operation
  swRegistrationSuccess:
    type: object
    required:
      - swRegistrationOperationId
    properties:
      swRegistrationOperationId:
        $ref: '#/definitions/operationId'
        description: id of sw registration process
  vehicleRegistrationSuccess:
    type: object
    required:
      - vehcileRegistrationOperationId
    properties:
      vehcileRegistrationOperationId:
        $ref: '#/definitions/operationId'
        description: id of vehicle registration process
  campaignCreationSuccess:
    type: object
    required:
      - campaignId
    properties:
      campaignId:
        $ref: '#/definitions/operationId'
        description: id of campaign created
  CampaignDataBody:
    type: object
    required:
      - CampaignPayLoad
    properties:
      CampaignPayLoad:
        $ref: '#/definitions/campaignPayLoadDef'
  campaignPayLoadDef:
    type: object
    required:
      - kindOfCampaign
      - startDate
      - stopDate
      - workflowClass
      - vinCampaignPopulation
      - ecuTargetCampaignPopulation
    properties:
      kindOfCampaign:
        description: kind of campaign
        type: string
        enum:
          - otaUpdateOnly
          - dmUpdateOnly
          - otaAndDmUpdate
          - otaInventoryOnly
          - dmInventoryOnly
          - otaAndDmInventory
        example: otaAndDmUpdate
      workflowClass:
        description: class of workflow to apply - enum to be provided
        type: string
      startDate:
        description: start date of campaign
        type: string
        format: YYYY-MM-DD
      stopDate:
        description: end date of campaign
        type: string
        format: YYYY-MM-DD
      vinCampaignPopulation:
        description: Array of VIN in scope of the campaign
        type: array
        items:
          type: object
          properties:
            vin:
              type: object
              required:
                - vinValue
              properties:
                vinValue:
                  description: the VIN in scope
                  type: string
                vinSpecificData:
                  type: array
                  description: array of VIN specific data
                  items:
                    type: object
                    properties:
                      variantCoding:
                        description: variant coding to apply
                        type: string
      ecuTargetCampaignPopulation:
        type: object
        properties:
          otaECUtargets:
            type: array
            description: array of OTA target
            items:
              type: object
              required:
                - scomoId
                - targetVersion
              properties:
                scomoId:
                  description: scomo id in scope
                  type: string
                targetVersion:
                  description: target version to reach
                  type: string
                expectedVersion:
                  description: expected current version
                  type: string
                licenceRequired:
                  description: true if licence is required
                  type: boolean
          dmECUtargets:
            type: array
            description: array of DM target
            items:
              type: object
              required:
                - profile
                - valueToApply
              properties:
                profile:
                  description: DM profile in scope
                  type: string
                operation:
                  description: DM operation
                  type: string
                  enum:
                    - read
                    - write
                    - execute
                valueToApply:
                  type: string
  commonVinPopulation:
    description: Array of VIN in scope
    type: array
    items:
      type: object
      properties:
        vin:
          type: object
          required:
            - vinValue
          properties:
            vinValue:
              description: the VIN in scope
              type: string
  operationStatus:
    type: object
    required:
      - status
      - reason
    properties:
      status:
        type: string
        enum:
          - ready
          - started
          - inProgress
          - completed
          - failed
          - aborted
        description: the status of the operation
      reason:
        type: string
        description: the reason of the status
  swRegistrationOperationFeedBack:
    type: object
    required:
      - swRegistrationProcessId
      - status
    properties:
      swRegistrationProcessId:
        $ref: '#/definitions/operationId'
        description: the software registration operaion Id this feedback is realted to
      status:
        $ref: '#/definitions/operationStatus'
        description: the status of the population in this feedback
  vehicleRegistrationOperationFeedBack:
    type: object
    required:
      - vehicleRegistrationProcessId
      - status
      - vehicleRegistrationFeedbackPayLoad
    properties:
      vehicleRegistrationProcessId:
        $ref: '#/definitions/operationId'
        description: the vehicle registration operaion Id this feedback is realted to
      status:
        $ref: '#/definitions/operationStatus'
        description: the status of the population in this feedback
      vehicleRegistrationFeedbackPayLoad:
        $ref: '#/definitions/commonVinPopulation'
        description: the population in this feedback
  campaignOperationFeedBack:
    type: object
    required:
      - campaignId
      - status
      - campaignFeedbackPayLoad
    properties:
      campaignId:
        $ref: '#/definitions/operationId'
        description: the campaign Id this feedback is realted to
      status:
        $ref: '#/definitions/operationStatus'
        description: the status of the population in this feedback
      campaignFeedbackPayLoad:
        $ref: '#/definitions/commonVinPopulation'
        description: the population in this feedback
  CampaignStartDataBody:
    type: object
    required:
      - CampaignStartPayLoad
    properties:
      CampaignPayLoad:
        $ref: '#/definitions/campaignStartPayLoadDef'
  campaignStartPayLoadDef:
    type: object
    required:
      - campaignId
      - startEntirePopulation
    properties:
      campaignId:
        description: id of campaign to start as provided by previous Campaign Creation; can be invoked multiple time with different VIN populations if startEntirePopulation is false and was false in any previous call to this service for this Campaign Id. The VIN pouplation can only be a strict set of the population provided in Prepare Campaign call.
        $ref: '#/definitions/operationId'
      startEntirePopulation:
        description: if true then vinCampaignPopulation (if provided) is ignored and the campaign will be started on all VINs in this campaign
        type: boolean
        example: 'false'
      vinCampaignPopulation:
        description: Array of VIN in scope of the start
        $ref: '#/definitions/commonVinPopulation'
  400ErrorResponse:
    type: object
    required:
      - message
    properties:
      name:
        type: string
        enum:
          - Bad Request
      message:
        type: string
        example: Missing/Invalid Parameter in Request
  401ErrorResponse:
    type: object
    required:
      - message
    properties:
      name:
        type: string
        enum:
          - Unauthorized
      message:
        type: string
        example: Unauthorized
  403ErrorResponse:
    type: object
    required:
      - message
    properties:
      name:
        type: string
        enum:
          - Forbidden
      message:
        type: string
        example: Forbidden
  404ErrorResponse:
    type: object
    required:
      - message
    properties:
      name:
        type: string
        enum:
          - Not found
      message:
        type: string
        example: Resource Not Found
  408ErrorResponse:
    type: object
    required:
      - message
    properties:
      name:
        type: string
        enum:
          - Timeout
      message:
        type: string
        example: Timeout
  ErrorModel:
    type: object
    required:
      - name
      - message
    properties:
      name:
        type: string
      message:
        type: string
  500ErrorResponse:
    type: object
    required:
      - message
    properties:
      name:
        type: string
        enum:
          - System Exception
      message:
        type: string
        example: Internal Server Error
  503ErrorResponse:
    type: object
    required:
      - message
    properties:
      name:
        type: string
        enum:
          - Service Unavailable
      message:
        type: string
        example: Service Temporarily Unavailable
  Success:
    type: object
    properties:
      status:
        type: string
        example: success
  422ErrorResponse:
    type: object
    required:
      - message
    properties:
      name:
        type: string
        enum:
          - Bad Response
      message:
        type: string
        example: Response cannot be processed
